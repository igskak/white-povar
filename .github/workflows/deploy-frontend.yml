name: Deploy Frontend to Firebase

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/deploy-frontend.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'frontend/**'
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.24.1'
  NODE_VERSION: '18'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
        
    - name: Install Firebase CLI
      run: npm install -g firebase-tools
      
    - name: Get Flutter dependencies
      run: flutter pub get
      
    - name: Analyze Flutter code
      run: flutter analyze
      
    - name: Run Flutter tests
      run: flutter test
      
    - name: Build Flutter web
      run: |
        flutter build web \
          --dart-define=API_BASE_URL=${{ secrets.API_BASE_URL || 'https://your-backend-url.com' }} \
          --dart-define=SUPABASE_URL=${{ secrets.SUPABASE_URL }} \
          --dart-define=SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }} \
          --release \
          --web-renderer html
          
    - name: Deploy to Firebase Hosting
      if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      run: |
        firebase deploy --only hosting --token $FIREBASE_TOKEN
        
    - name: Preview deploy (PR only)
      if: github.event_name == 'pull_request'
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      run: |
        firebase hosting:channel:deploy pr-${{ github.event.number }} --token $FIREBASE_TOKEN